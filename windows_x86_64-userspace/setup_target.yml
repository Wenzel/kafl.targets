- name: Setup target
  hosts: all
  vars:
    vcvars_path: "{{ ansible_env['ProgramFiles(x86)'] }}\\Microsoft Visual Studio\\2017\\BuildTools\\VC\\Auxiliary\\Build\\vcvars64.bat"
    dest_path: "{{ ansible_env.USERPROFILE }}\\Desktop"
    wdk_include_km_path: "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\km"
    wdk_lib_path: "C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.17763.0\\km\\x64"
    ntoskrnllib_path: "C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.17763.0\\km\\x64\\ntoskrnl.lib"
  tasks:
    - name: Set default value for target_harness
      set_fact:
        target_harness: 'userspace'
      when: target_harness is undefined

    - name: Upload binaries
      win_copy:
        src: bin
        dest: "{{ dest_path }}"

    - name: Setup userspace harness target
      block:
        - name: Setup userspace target to run at user login
          win_shortcut:
            src: "{{ ansible_env.USERPROFILE }}\\Desktop\\userspace\\selffuzz_test.exe"
            dest: "{{ ansible_env.APPDATA }}\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\kafl_target.lnk"
      when: target_harness == 'userspace'

    - name: Setup driver harness target
      block:
        - name: Upload vuln driver
          win_copy:
            src: src/driver/driver.c
            dest: "{{ dest_path }}"

        # driver needs to be compiled by MSVC
        - name: Write compile script
          win_copy:
            dest: "{{ dest_path }}\\compile.bat"
            content: |
              {{ vcvars_path | ansible.windows.quote }} && cl /c Driver.c /D _AMD64_ && link Driver.obj /out:vuln_driver.sys /subsystem:native /entry:DriverEntry {{ ntoskrnllib_path | ansible.windows.quote }}

        - name: Compile driver with MSVC
          win_command: "compile.bat"
          args:
            chdir: "{{ dest_path }}"
          environment:
            INCLUDE: "{{ wdk_include_km_path }}"
            LIB: "{{ wdk_lib_path }}"

        # win_service cannot create kernel level services
        - name: Set service to start vuln_driver.sys at boot
          win_command: "sc create vuln_driver binPath= {{ dest_path + '/vuln_driver.sys' | ansible.windows.quote }} type= kernel start= auto"
          register: result
          failed_when:
            - result.rc != 0
            - result.rc != 1073 # service already exists

        - name: Set service to start vuln_test to trigger the driver
          win_service:
            name: vuln_driver_trigger
            path: "{{ dest_path }}\\bin\\driver\\vuln_test.exe"
            start_mode: auto
            dependencies: ["vuln_driver"]

        - name: ls
          win_shell: Get-ChildItem -Recurse
          args:
            chdir: "{{ dest_path }}"
      when: target_harness == 'driver'
    


    # - name: Execute vcvars
    #   win_shell: "{{ vcvars_path | ansible.windows.quote }} > nul && set"
    #   args:
    #     executable: cmd
    #   register: vcvars_output

    # - name: Build Ansible vcvars dict from vcvars.bat exported env vars stdout
    #   set_fact:
    #     vcvars_dict: "{{ vcvars_dict | default({}) | combine( {item.split('=')[0]:item.split('=')[1]} ) }}"
    #   loop: "{{ vcvars_output.stdout_lines }}"

    # - name: Set Windows environment for current session
    #   win_environment:
    #     level: user
    #     variables: "{{ vcvars_dict }}"

    # - name: Update vcvars with WDK
    #   set_fact:
    #     vcvars_dict: "{{ vcvars_dict | combine({item.key: item.value}) }}"
    #   with_items:
    #     - {key: 'INCLUDE', value: "{{ vcvars_dict['INCLUDE'] }};{{ wdk_include_km_path }}"}
    #     - {key: 'LIB', value: "{{ vcvars_dict['LIB'] }};{{ wdk_lib_path }}"}


